[
   {
      "keyword": "type",
      "dataPath": "/author",
      "schemaPath": "#/definitions/author/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/bugs",
      "schemaPath": "#/definitions/bugs/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/changelog",
      "schemaPath": "#/definitions/changelog/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/compatibleCoreVersion",
      "schemaPath": "#/definitions/compatibleCoreVersion/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/dependencies/0",
      "schemaPath": "#/definitions/dependencies/items/type",
      "params": {
         "type": "object"
      },
      "message": "should be object"
   },
   {
      "keyword": "required",
      "dataPath": "/dependencies/1",
      "schemaPath": "#/definitions/dependencies/items/required",
      "params": {
         "missingProperty": "name"
      },
      "message": "should have required property 'name'"
   },
   {
      "keyword": "type",
      "dataPath": "/description",
      "schemaPath": "#/definitions/description/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/download",
      "schemaPath": "#/definitions/download/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/esmodules",
      "schemaPath": "#/definitions/esmodules/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   },
   {
      "keyword": "type",
      "dataPath": "/languages/0",
      "schemaPath": "#/definitions/languages/items/type",
      "params": {
         "type": "object"
      },
      "message": "should be object"
   },
   {
      "keyword": "required",
      "dataPath": "/languages/1",
      "schemaPath": "#/definitions/languages/items/required",
      "params": {
         "missingProperty": "lang"
      },
      "message": "should have required property 'lang'"
   },
   {
      "keyword": "type",
      "dataPath": "/license",
      "schemaPath": "#/definitions/license/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/minimumCoreVersion",
      "schemaPath": "#/definitions/minimumCoreVersion/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "errorMessage",
      "dataPath": "/name",
      "schemaPath": "#/definitions/name/errorMessage",
      "params": {
         "errors": [
            {
               "keyword": "pattern",
               "dataPath": "/name",
               "schemaPath": "#/definitions/name/pattern",
               "params": {
                  "pattern": "^([a-z0-9]+-?)*[a-z0-9]+$"
               },
               "message": "should match pattern \"^([a-z0-9]+-?)*[a-z0-9]+$\"",
               "emUsed": true
            }
         ]
      },
      "message": "'name' should be a string that is lowercase alpha-numeric with only separating hyphens"
   },
   {
      "keyword": "type",
      "dataPath": "/readme",
      "schemaPath": "#/definitions/readme/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/scripts",
      "schemaPath": "#/definitions/scripts/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   },
   {
      "keyword": "type",
      "dataPath": "/socket",
      "schemaPath": "#/definitions/socket/type",
      "params": {
         "type": "boolean"
      },
      "message": "should be boolean"
   },
   {
      "keyword": "type",
      "dataPath": "/styles",
      "schemaPath": "#/definitions/styles/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   },
   {
      "keyword": "type",
      "dataPath": "/title",
      "schemaPath": "#/definitions/title/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/url",
      "schemaPath": "#/definitions/url/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/version",
      "schemaPath": "#/definitions/version/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/manifest",
      "schemaPath": "#/definitions/manifest/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/0",
      "schemaPath": "#/definitions/packs/items/type",
      "params": {
         "type": "object"
      },
      "message": "should be object"
   },
   {
      "keyword": "required",
      "dataPath": "/packs/1",
      "schemaPath": "#/definitions/packs/items/required",
      "params": {
         "missingProperty": "module"
      },
      "message": "should have required property 'module'"
   },
   {
      "keyword": "errorMessage",
      "dataPath": "/packs/1/system",
      "schemaPath": "#/definitions/packs/items/properties/system/errorMessage",
      "params": {
         "errors": [
            {
               "keyword": "type",
               "dataPath": "/packs/1/system",
               "schemaPath": "#/definitions/packs/items/properties/system/oneOf/0/type",
               "params": {
                  "type": "string"
               },
               "message": "should be string",
               "emUsed": true
            },
            {
               "keyword": "type",
               "dataPath": "/packs/1/system",
               "schemaPath": "#/definitions/packs/items/properties/system/oneOf/1/type",
               "params": {
                  "type": "array"
               },
               "message": "should be array",
               "emUsed": true
            },
            {
               "keyword": "oneOf",
               "dataPath": "/packs/1/system",
               "schemaPath": "#/definitions/packs/items/properties/system/oneOf",
               "params": {
                  "passingSchemas": null
               },
               "message": "should match exactly one schema in oneOf",
               "emUsed": true
            }
         ]
      },
      "message": "'system' should be a string or array of strings"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/1/name",
      "schemaPath": "#/definitions/packs/items/properties/name/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/1/label",
      "schemaPath": "#/definitions/packs/items/properties/label/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/1/path",
      "schemaPath": "#/definitions/packs/items/properties/path/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "enum",
      "dataPath": "/packs/1/entity",
      "schemaPath": "#/definitions/packs/items/properties/entity/enum",
      "params": {
         "allowedValues": [
            "Actor",
            "ChatMessage",
            "Combat",
            "Item",
            "Folder",
            "JournalEntry",
            "Macro",
            "Playlist",
            "RollTable",
            "Scene",
            "User"
         ]
      },
      "message": "should be equal to one of the allowed values"
   },
   {
      "keyword": "required",
      "dataPath": "/packs/2",
      "schemaPath": "#/definitions/packs/items/required",
      "params": {
         "missingProperty": "module"
      },
      "message": "should have required property 'module'"
   },
   {
      "keyword": "required",
      "dataPath": "/packs/2",
      "schemaPath": "#/definitions/packs/items/required",
      "params": {
         "missingProperty": "path"
      },
      "message": "should have required property 'path'"
   },
   {
      "keyword": "required",
      "dataPath": "/packs/2",
      "schemaPath": "#/definitions/packs/items/required",
      "params": {
         "missingProperty": "entity"
      },
      "message": "should have required property 'entity'"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/2/system/0",
      "schemaPath": "#/definitions/packs/items/properties/system/oneOf/1/items/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "errorMessage",
      "dataPath": "/packs/2/system",
      "schemaPath": "#/definitions/packs/items/properties/system/errorMessage",
      "params": {
         "errors": [
            {
               "keyword": "type",
               "dataPath": "/packs/2/system",
               "schemaPath": "#/definitions/packs/items/properties/system/oneOf/0/type",
               "params": {
                  "type": "string"
               },
               "message": "should be string",
               "emUsed": true
            },
            {
               "keyword": "oneOf",
               "dataPath": "/packs/2/system",
               "schemaPath": "#/definitions/packs/items/properties/system/oneOf",
               "params": {
                  "passingSchemas": null
               },
               "message": "should match exactly one schema in oneOf",
               "emUsed": true
            }
         ]
      },
      "message": "'system' should be a string or array of strings"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/2/name",
      "schemaPath": "#/definitions/packs/items/properties/name/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/2/label",
      "schemaPath": "#/definitions/packs/items/properties/label/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "required",
      "dataPath": "/packs/3",
      "schemaPath": "#/definitions/packs/items/required",
      "params": {
         "missingProperty": "name"
      },
      "message": "should have required property 'name'"
   },
   {
      "keyword": "required",
      "dataPath": "/packs/3",
      "schemaPath": "#/definitions/packs/items/required",
      "params": {
         "missingProperty": "entity"
      },
      "message": "should have required property 'entity'"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/3/module",
      "schemaPath": "#/definitions/packs/items/properties/module/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/3/label",
      "schemaPath": "#/definitions/packs/items/properties/label/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/packs/3/path",
      "schemaPath": "#/definitions/packs/items/properties/path/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "errorMessage",
      "dataPath": "/system",
      "schemaPath": "#/definitions/system/errorMessage",
      "params": {
         "errors": [
            {
               "keyword": "type",
               "dataPath": "/system",
               "schemaPath": "#/definitions/system/oneOf/0/type",
               "params": {
                  "type": "string"
               },
               "message": "should be string",
               "emUsed": true
            },
            {
               "keyword": "type",
               "dataPath": "/system",
               "schemaPath": "#/definitions/system/oneOf/1/type",
               "params": {
                  "type": "array"
               },
               "message": "should be array",
               "emUsed": true
            },
            {
               "keyword": "oneOf",
               "dataPath": "/system",
               "schemaPath": "#/definitions/system/oneOf",
               "params": {
                  "passingSchemas": null
               },
               "message": "should match exactly one schema in oneOf",
               "emUsed": true
            }
         ]
      },
      "message": "'system' should be a string or array of strings"
   },
   {
      "keyword": "type",
      "dataPath": "/authors/0",
      "schemaPath": "#/items/type",
      "params": {
         "type": "object"
      },
      "message": "should be object"
   },
   {
      "keyword": "required",
      "dataPath": "/authors/1",
      "schemaPath": "#/definitions/properties-author/required",
      "params": {
         "missingProperty": "name"
      },
      "message": "should have required property 'name'"
   }
]