[
   {
      "keyword": "type",
      "dataPath": "/author",
      "schemaPath": "#/definitions/author/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/bugs",
      "schemaPath": "#/definitions/bugs/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/changelog",
      "schemaPath": "#/definitions/changelog/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/compatibleCoreVersion",
      "schemaPath": "#/definitions/compatibleCoreVersion/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/dependencies",
      "schemaPath": "#/definitions/dependencies/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   },
   {
      "keyword": "type",
      "dataPath": "/description",
      "schemaPath": "#/definitions/description/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/download",
      "schemaPath": "#/definitions/download/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/esmodules",
      "schemaPath": "#/definitions/esmodules/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   },
   {
      "keyword": "type",
      "dataPath": "/languages",
      "schemaPath": "#/definitions/languages/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   },
   {
      "keyword": "type",
      "dataPath": "/license",
      "schemaPath": "#/definitions/license/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/minimumCoreVersion",
      "schemaPath": "#/definitions/minimumCoreVersion/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/name",
      "schemaPath": "#/definitions/name/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/readme",
      "schemaPath": "#/definitions/readme/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/scripts",
      "schemaPath": "#/definitions/scripts/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   },
   {
      "keyword": "type",
      "dataPath": "/socket",
      "schemaPath": "#/definitions/socket/type",
      "params": {
         "type": "boolean"
      },
      "message": "should be boolean"
   },
   {
      "keyword": "type",
      "dataPath": "/styles",
      "schemaPath": "#/definitions/styles/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   },
   {
      "keyword": "type",
      "dataPath": "/title",
      "schemaPath": "#/definitions/title/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/url",
      "schemaPath": "#/definitions/url/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "errorMessage",
      "dataPath": "/version",
      "schemaPath": "#/definitions/version/errorMessage",
      "params": {
         "errors": [
            {
               "keyword": "type",
               "dataPath": "/version",
               "schemaPath": "#/definitions/version/oneOf/0/type",
               "params": {
                  "type": "string"
               },
               "message": "should be string",
               "emUsed": true
            },
            {
               "keyword": "type",
               "dataPath": "/version",
               "schemaPath": "#/definitions/version/oneOf/1/type",
               "params": {
                  "type": "number"
               },
               "message": "should be number",
               "emUsed": true
            },
            {
               "keyword": "oneOf",
               "dataPath": "/version",
               "schemaPath": "#/definitions/version/oneOf",
               "params": {
                  "passingSchemas": null
               },
               "message": "should match exactly one schema in oneOf",
               "emUsed": true
            }
         ]
      },
      "message": "'version' should be a string or number"
   },
   {
      "keyword": "type",
      "dataPath": "/manifest",
      "schemaPath": "#/definitions/manifest/type",
      "params": {
         "type": "string"
      },
      "message": "should be string"
   },
   {
      "keyword": "type",
      "dataPath": "/packs",
      "schemaPath": "#/definitions/packs/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   },
   {
      "keyword": "errorMessage",
      "dataPath": "/system",
      "schemaPath": "#/definitions/system/errorMessage",
      "params": {
         "errors": [
            {
               "keyword": "type",
               "dataPath": "/system",
               "schemaPath": "#/definitions/system/oneOf/0/type",
               "params": {
                  "type": "string"
               },
               "message": "should be string",
               "emUsed": true
            },
            {
               "keyword": "type",
               "dataPath": "/system",
               "schemaPath": "#/definitions/system/oneOf/1/type",
               "params": {
                  "type": "array"
               },
               "message": "should be array",
               "emUsed": true
            },
            {
               "keyword": "oneOf",
               "dataPath": "/system",
               "schemaPath": "#/definitions/system/oneOf",
               "params": {
                  "passingSchemas": null
               },
               "message": "should match exactly one schema in oneOf",
               "emUsed": true
            }
         ]
      },
      "message": "'system' should be a string or array of strings"
   },
   {
      "keyword": "type",
      "dataPath": "/authors",
      "schemaPath": "#/type",
      "params": {
         "type": "array"
      },
      "message": "should be array"
   }
]